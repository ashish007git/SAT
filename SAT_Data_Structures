Implement decision level to each of the free decisions.
When multiple conflict clauses are identified, choose the pair with lowest level of decision level.
Atleast one of the literal in the conflict clause is the current decision literal (forced/free).

The first conflict identified at current decision level in the tree assures that,
non chronological backtrack jumps to the lowest decision level.

For variables assignments data structure,
Array of n variables,
-1 : Unassigned
0, 1: Assigned 0 or 1

Sort all the literals (numerically with sign) for each of the clauses separately and split into two lists.
One maintaining all the complemented literals (-ve numbers) and other maintaining uncomplemented literals (+ve numbers).

Stack to maintain only the free decisions that we have made so far. Upon backtracking, pop the appropriate elements from the top of the stack.

if(parent == null) free decision.
else forced decision.

store free decisions in adjacency list??

decide variable to branch on based on max clauses containing x or x'.

Resolution of unit clauses which have binate variable is a CONFLICT.

All forced decisions will be because of 2-SAT.

All forced decisions not involved in conflict literal, and thus can  be retained even after backtracking.
They are anyway satisfying some of the clauses.

Can we incorporate huffman encoding for the variables? Not good idea.

Binate variables are the ones to result in conflict eventually. Hence, prioritise assigning binate variables.
Unate variables will anyway satisfy by appropriate assignment.

Is it possible to maintain the count of unassigned literals other than watch variables.
So, when any other variable other than watch varibale is being picked, we decrement this count till 0.
A count of 0 => 2-SAT. Hence we can prioritise free decisions from this clause.
